{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://ngx-scanner-qrcode-single/lib/ngx-scanner-qrcode-single.default.ts","ng://ngx-scanner-qrcode-single/lib/ngx-scanner-qrcode-single.helper.ts","ng://ngx-scanner-qrcode-single/lib/ngx-scanner-qrcode-single.service.ts","ng://ngx-scanner-qrcode-single/lib/ngx-scanner-qrcode-single.component.ts","ng://ngx-scanner-qrcode-single/lib/ngx-scanner-qrcode-single.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","adopt","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__read","o","m","r","ar","error","__spread","concat","MEDIA_STREAM_DEFAULT","audio","video","CONFIG_DEFAULT","src","fps","vibrate","isBeep","constraints","canvasStyles","font","lineWidth","strokeStyle","fillStyle","_this","PROP_EXISTS","obj","path","split","reduce","prop","undefined","AS_COMPLETE","as","data","complete","PLAY_AUDIO","isPlay","Audio","Array","join","oncanplaythrough","promise","play","catch","name","DRAW_RESULT_APPEND_CHILD","code","oriCanvas","elTarget","widthZoom","heightZoom","oriWidth","width","oriHeight","height","oriWHRatio","imgWidth","parseInt","getComputedStyle","imgHeight","imgWHRatio","innerHTML","cvs","document","createElement","ctx","getContext","willReadFrequently","loc","X","Y","fontSize","svgSize","num","replace","test","parseFloat","Number","isNaN","points","location","drawFrame","begin","end","j","key","beginPath","moveTo","x","lineTo","stroke","xj","yj","topLeftCorner","topRightCorner","bottomRightCorner","bottomLeftCorner","maxX","Math","max","minX","min","maxY","minY","setAttribute","style","top","left","polygon","k","shape","slice","shift","closePath","fill","qrcodeTooltipTemp","innerText","xmlString","xmlDom","DOMParser","parseFromString","svgDom","ownerDocument","importNode","documentElement","appendChild","addEventListener","window","navigator","writeText","qrcodeTooltip","resultText","READ_AS_DATA_URL","file","configs","fileReader","FileReader","onload","objectFile","url","URL","createObjectURL","image","Image","canvas","naturalWidth","naturalHeight","drawImage","imageData","getImageData","jsQR","inversionAttempts","FILL_TEXT_MULTI_LINE","DRAW_RESULT_ON_CANVAS","CANVAS_TO_BLOB","blob","_a","blobToFile","theBlob","fileName","File","lastModified","Date","getTime","type","onerror","readAsDataURL","toBlob","FILES_TO_SCAN","files","AsyncSubject","all","map","img","text","lineHeight","measureText","lines","fillText","strokeText","COMPRESS_IMAGE","quality","compressImage","createImageBitmap","imageBitmap","dataTransfer","DataTransfer","files_1","__values","tslib_1.__values","files_1_1","startsWith","items","add","compressedFile","_b","REMOVE_CANVAS","element","childNodes","forEach","el","removeChild","VIBRATE","time","IS_MOBILE","vendor","userAgent","substr","NgxScannerQrcodeSingleService","loadFiles","_files","loadFilesToScan","config","Injectable","args","providedIn","NgxScannerQrcodeSingleComponent","EventEmitter","BehaviorSubject","startON","isStart","pauseON","isPause","loadingON","isLoading","startOFF","pauseOFF","loadingOFF","torchOFF","isTorch","ngOnInit","overrideConfig","loadImage","resize","ngAfterViewInit","setTimeout","ready","start","playDeviceCustom","safariWebRTC","stop","STATUS","clearInterval","rAF_ID","nativeElement","getTracks","track","resultsPanel","requestAnimationFrame","pause","playDevice","deviceId","existDeviceId","getConstraints","deviceIndexActive","devices","findIndex","mediaDevices","getUserMedia","stream","srcObject","onloadedmetadata","eventEmit","flag","torcher","applyConstraints","advanced","torch","subscribe","videoTrack","getVideoTracks","ImageCapture","getPhotoCapabilities","download","now","res","item","link","href","click","remove","dataForResize","offsetHeight","variableKey","defaultConfig","keys","cloneDeep","JSON","parse","stringify","OVERRIDES","loadAllDevices","enumerateDevices","cameraDevices","filter","kind","callback","HTMLImageElement","visibility","HTMLVideoElement","videoWidth","videoHeight","clearRect","EMIT_DATA","response","event","emit","delay","setInterval","readyState","HAVE_ENOUGH_DATA","defineProperty","ngOnDestroy","Component","selector","template","host","class","exportAs","inputs","outputs","queries","ViewChild","encapsulation","ViewEncapsulation","None","NgxScannerQrcodeSingleModule","NgModule","declarations","exports","providers"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { ScannerQRCodeConfig } from \"./ngx-scanner-qrcode-single.options\";\r\n\r\nexport const MEDIA_STREAM_DEFAULT: MediaStreamConstraints = {\r\n  audio: false,\r\n  video: true\r\n};\r\n\r\nexport const CONFIG_DEFAULT: ScannerQRCodeConfig = {\r\n  src: '',\r\n  fps: 30,\r\n  vibrate: 300,\r\n  isBeep: true,\r\n  constraints: MEDIA_STREAM_DEFAULT,\r\n  canvasStyles: {\r\n    font: '15px serif',\r\n    lineWidth: 1,\r\n    strokeStyle: 'green',\r\n    fillStyle: '#55f02880'\r\n  } as CanvasRenderingContext2D\r\n};","import jsQR from \"jsqr\";\r\nimport { AsyncSubject } from \"rxjs\";\r\nimport { CONFIG_DEFAULT } from \"./ngx-scanner-qrcode-single.default\";\r\nimport { Point, ScannerQRCodeConfig, ScannerQRCodeResult, ScannerQRCodeSelectedFiles } from \"./ngx-scanner-qrcode-single.options\";\r\n\r\n/**\r\n * PROP_EXISTS\r\n * @param obj \r\n * @param path \r\n * @returns \r\n */\r\nexport const PROP_EXISTS = (obj: any, path: string) => {\r\n  return !!path.split(\".\").reduce((obj, prop) => {\r\n      return obj && obj[prop] ? obj[prop] : undefined;\r\n  }, obj);\r\n};\r\n\r\n/**\r\n * OVERRIDES\r\n * @param variableKey \r\n * @param config \r\n * @param defaultConfig \r\n * @returns \r\n */\r\nexport const OVERRIDES = (variableKey: string, config: any, defaultConfig: any) => {\r\n  if (config && Object.keys(config[variableKey]).length) {\r\n    for (const key in defaultConfig) {\r\n      const cloneDeep = JSON.parse(JSON.stringify({ ...config[variableKey], ...{ [key]: (defaultConfig as any)[key] } }));\r\n      config[variableKey] = config[variableKey] && config[variableKey].hasOwnProperty(key) ? config[variableKey] : cloneDeep;\r\n    }\r\n    return config[variableKey];\r\n  } else {\r\n    return defaultConfig;\r\n  }\r\n};\r\n\r\n/**\r\n * Rxjs complete\r\n * @param as\r\n * @param data\r\n * @param error\r\n */\r\nexport const AS_COMPLETE = (as: AsyncSubject<any>, data: any, error?: any) => {\r\n  error ? as.error(error) : as.next(data);\r\n  as.complete();\r\n};\r\n\r\n/**\r\n * CAMERA_BEEP\r\n * @param isPlay \r\n * @returns \r\n */\r\nexport const PLAY_AUDIO = (isPlay: boolean = false) => {\r\n  if (isPlay === false) return;\r\n  const audio = new Audio('data:audio/wav;base64,UklGRl9vT19XQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YU' + Array(300).join('101'));\r\n  // when the sound has been loaded, execute your code\r\n  audio.oncanplaythrough = () => {\r\n    const promise = audio.play();\r\n    if (promise) {\r\n      promise.catch((e) => {\r\n        if (e.name === \"NotAllowedError\" || e.name === \"NotSupportedError\") {\r\n          // console.log(e.name);\r\n        }\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * DRAW_RESULT_APPEND_CHILD\r\n * @param code \r\n * @param oriCanvas \r\n * @param elTarget \r\n * @param canvasStyles \r\n */\r\nexport const DRAW_RESULT_APPEND_CHILD = (code: ScannerQRCodeResult, oriCanvas: HTMLCanvasElement, elTarget: HTMLCanvasElement | HTMLDivElement, canvasStyles: CanvasRenderingContext2D) => {\r\n  let widthZoom;\r\n  let heightZoom;\r\n  let oriWidth = oriCanvas.width;\r\n  let oriHeight = oriCanvas.height;\r\n  let oriWHRatio = oriWidth / oriHeight;\r\n  let imgWidth = parseInt(getComputedStyle(oriCanvas).width);\r\n  let imgHeight = parseInt(getComputedStyle(oriCanvas).height);\r\n  let imgWHRatio = imgWidth / imgHeight;\r\n  elTarget.innerHTML = '';\r\n\r\n  if (oriWHRatio > imgWHRatio) {\r\n    widthZoom = imgWidth / oriWidth;\r\n    heightZoom = imgWidth / oriWHRatio / oriHeight;\r\n  } else {\r\n    heightZoom = imgHeight / oriHeight;\r\n    widthZoom = (imgHeight * oriWHRatio) / oriWidth;\r\n  }\r\n\r\n  // New canvas\r\n  let cvs = document.createElement(\"canvas\");\r\n  let ctx = cvs.getContext('2d', { willReadFrequently: true }) as CanvasRenderingContext2D;\r\n  let loc: any = {};\r\n  let X: any = [];\r\n  let Y: any = [];\r\n  let fontSize = 0;\r\n  let svgSize = 0;\r\n\r\n  let num = PROP_EXISTS(canvasStyles,'font.replace') && canvasStyles.font.replace(/[^0-9]/g, '');\r\n  if (/[0-9]/g.test(num)) {\r\n    fontSize = parseFloat(num);\r\n    svgSize = (widthZoom || 1) * fontSize;\r\n    if (Number.isNaN(svgSize)) {\r\n      svgSize = fontSize;\r\n    }\r\n  }\r\n\r\n  // Point x,y\r\n  const points = code.location;\r\n  const drawFrame = (begin: Point, end: Point, j: number) => {\r\n    ctx.beginPath();\r\n    ctx.moveTo(begin.x, begin.y);\r\n    ctx.lineTo(end.x, end.y);\r\n    for (let key in canvasStyles) {\r\n      (ctx as any)[key] = (canvasStyles as any)[key];\r\n    }\r\n    ctx.stroke();\r\n    const xj = PROP_EXISTS(begin,'x') ? begin.x : 0;\r\n    const yj = PROP_EXISTS(begin,'y') ? begin.y : 0;\r\n    loc[`x${j + 1}`] = xj;\r\n    loc[`y${j + 1}`] = yj;\r\n    X.push(xj);\r\n    Y.push(yj);\r\n  };\r\n  drawFrame(points.topLeftCorner, points.topRightCorner, 0);\r\n  drawFrame(points.topRightCorner, points.bottomRightCorner, 1);\r\n  drawFrame(points.bottomRightCorner, points.bottomLeftCorner, 2);\r\n  drawFrame(points.bottomLeftCorner, points.topLeftCorner, 3);\r\n\r\n  // Min max\r\n  let maxX = Math.max(...X);\r\n  let minX = Math.min(...X);\r\n  let maxY = Math.max(...Y);\r\n  let minY = Math.min(...Y);\r\n\r\n  // Add class\r\n  cvs.setAttribute('class', 'qrcode-polygon');\r\n\r\n  // Size with screen zoom\r\n  if (oriWHRatio > imgWHRatio) {\r\n    cvs.style.top = minY * heightZoom + (imgHeight - imgWidth / oriWHRatio) * 0.5 + \"px\";\r\n    cvs.style.left = minX * widthZoom + \"px\";\r\n    cvs.width = (maxX - minX) * widthZoom;\r\n    cvs.height = (maxY - minY) * widthZoom;\r\n  } else {\r\n    cvs.style.top = minY * heightZoom + \"px\";\r\n    cvs.style.left = minX * widthZoom + (imgWidth - imgHeight * oriWHRatio) * 0.5 + \"px\";\r\n    cvs.width = (maxX - minX) * heightZoom;\r\n    cvs.height = (maxY - minY) * heightZoom;\r\n  }\r\n\r\n  // Style for canvas\r\n  for (const key in canvasStyles) {\r\n    (ctx as any)[key] = (canvasStyles as any)[key];\r\n  }\r\n\r\n  // polygon [x,y, x,y, x,y.....];\r\n  const polygon = [];\r\n  for (let k = 0; k < X.length; k++) {\r\n    polygon.push((loc[`x${k + 1}`] - minX) * heightZoom);\r\n    polygon.push((loc[`y${k + 1}`] - minY) * widthZoom);\r\n  }\r\n\r\n  // Copy array\r\n  const shape = polygon.slice(0) as any;\r\n\r\n  // Draw polygon\r\n  ctx.beginPath();\r\n  ctx.moveTo(shape.shift(), shape.shift());\r\n  while (shape.length) {\r\n    ctx.lineTo(shape.shift(), shape.shift()); //x,y\r\n  }\r\n  ctx.closePath();\r\n  ctx.fill();\r\n  ctx.stroke();\r\n\r\n  if (fontSize) {\r\n    // Tooltip result\r\n    const qrcodeTooltipTemp = document.createElement('div');\r\n    qrcodeTooltipTemp.setAttribute('class', 'qrcode-tooltip-temp');\r\n    qrcodeTooltipTemp.innerText = code.data;\r\n    const xmlString = `<?xml version=\"1.0\" encoding=\"utf-8\"?><svg version=\"1.1\" class=\"qrcode-tooltip-clipboard\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"${svgSize}\" height=\"${svgSize}\" x=\"0px\" y=\"0px\" viewBox=\"0 0 115.77 122.88\" xml:space=\"preserve\"><g><path d=\"M89.62,13.96v7.73h12.19h0.01v0.02c3.85,0.01,7.34,1.57,9.86,4.1c2.5,2.51,4.06,5.98,4.07,9.82h0.02v0.02 v73.27v0.01h-0.02c-0.01,3.84-1.57,7.33-4.1,9.86c-2.51,2.5-5.98,4.06-9.82,4.07v0.02h-0.02h-61.7H40.1v-0.02 c-3.84-0.01-7.34-1.57-9.86-4.1c-2.5-2.51-4.06-5.98-4.07-9.82h-0.02v-0.02V92.51H13.96h-0.01v-0.02c-3.84-0.01-7.34-1.57-9.86-4.1 c-2.5-2.51-4.06-5.98-4.07-9.82H0v-0.02V13.96v-0.01h0.02c0.01-3.85,1.58-7.34,4.1-9.86c2.51-2.5,5.98-4.06,9.82-4.07V0h0.02h61.7 h0.01v0.02c3.85,0.01,7.34,1.57,9.86,4.1c2.5,2.51,4.06,5.98,4.07,9.82h0.02V13.96L89.62,13.96z M79.04,21.69v-7.73v-0.02h0.02 c0-0.91-0.39-1.75-1.01-2.37c-0.61-0.61-1.46-1-2.37-1v0.02h-0.01h-61.7h-0.02v-0.02c-0.91,0-1.75,0.39-2.37,1.01 c-0.61,0.61-1,1.46-1,2.37h0.02v0.01v64.59v0.02h-0.02c0,0.91,0.39,1.75,1.01,2.37c0.61,0.61,1.46,1,2.37,1v-0.02h0.01h12.19V35.65 v-0.01h0.02c0.01-3.85,1.58-7.34,4.1-9.86c2.51-2.5,5.98-4.06,9.82-4.07v-0.02h0.02H79.04L79.04,21.69z M105.18,108.92V35.65v-0.02 h0.02c0-0.91-0.39-1.75-1.01-2.37c-0.61-0.61-1.46-1-2.37-1v0.02h-0.01h-61.7h-0.02v-0.02c-0.91,0-1.75,0.39-2.37,1.01 c-0.61,0.61-1,1.46-1,2.37h0.02v0.01v73.27v0.02h-0.02c0,0.91,0.39,1.75,1.01,2.37c0.61,0.61,1.46,1,2.37,1v-0.02h0.01h61.7h0.02 v0.02c0.91,0,1.75-0.39,2.37-1.01c0.61-0.61,1-1.46,1-2.37h-0.02V108.92L105.18,108.92z\"></path></g></svg> `;\r\n    const xmlDom = new DOMParser().parseFromString(xmlString, 'application/xml');\r\n    const svgDom = qrcodeTooltipTemp.ownerDocument.importNode(xmlDom.documentElement, true);\r\n    qrcodeTooltipTemp.appendChild(svgDom);\r\n    svgDom.addEventListener(\"click\", () => window.navigator['clipboard'].writeText(code.data));\r\n\r\n    // Tooltip box\r\n    const qrcodeTooltip = document.createElement('div');\r\n    qrcodeTooltip.setAttribute('class', 'qrcode-tooltip');\r\n    qrcodeTooltip.appendChild(qrcodeTooltipTemp);\r\n    heightZoom = imgHeight / oriHeight;\r\n    widthZoom = (imgHeight * oriWHRatio) / oriWidth;\r\n    qrcodeTooltip.style.fontSize = widthZoom * fontSize + 'px';\r\n    qrcodeTooltip.style.top = minY * heightZoom + \"px\";\r\n    qrcodeTooltip.style.left = minX * widthZoom + (imgWidth - imgHeight * oriWHRatio) * 0.5 + \"px\";\r\n    qrcodeTooltip.style.width = (maxX - minX) * heightZoom + \"px\";\r\n    qrcodeTooltip.style.height = (maxY - minY) * heightZoom + \"px\";\r\n\r\n    // Result text\r\n    const resultText = document.createElement('span');\r\n    resultText.innerText = code.data;\r\n    resultText.style.fontSize = widthZoom * fontSize + 'px';\r\n\r\n    // Set position result text\r\n    resultText.style.top = minY * heightZoom + (-20 * heightZoom) + \"px\";\r\n    resultText.style.left = minX * widthZoom + (imgWidth - imgHeight * oriWHRatio) * 0.5 + \"px\";\r\n\r\n    elTarget && elTarget.appendChild(qrcodeTooltip);\r\n    elTarget && elTarget.appendChild(resultText);\r\n  }\r\n\r\n  elTarget && elTarget.appendChild(cvs);\r\n}\r\n\r\n/**\r\n * DRAW_RESULT_ON_CANVAS\r\n * @param code \r\n * @param cvs \r\n * @param canvasStyles \r\n */\r\nexport const DRAW_RESULT_ON_CANVAS = (code: ScannerQRCodeResult, cvs: HTMLCanvasElement, canvasStyles?: CanvasRenderingContext2D) => {\r\n  let ctx = cvs.getContext('2d', { willReadFrequently: true }) as CanvasRenderingContext2D;\r\n\r\n  let loc: any = {};\r\n  let X: any = [];\r\n  let Y: any = [];\r\n\r\n  // Point x,y\r\n  const points = code.location;\r\n  const drawFrame = (begin: Point, end: Point, j: number) => {\r\n    ctx.beginPath();\r\n    ctx.moveTo(begin.x, begin.y);\r\n    ctx.lineTo(end.x, end.y);\r\n    for (let key in canvasStyles) {\r\n      (ctx as any)[key] = (canvasStyles as any)[key];\r\n    }\r\n    ctx.stroke();\r\n    const xj = PROP_EXISTS(begin,'x') ? begin.x : 0;\r\n    const yj = PROP_EXISTS(begin,'y') ? begin.y : 0;\r\n    loc[`x${j + 1}`] = xj;\r\n    loc[`y${j + 1}`] = yj;\r\n    X.push(xj);\r\n    Y.push(yj);\r\n  };\r\n  drawFrame(points.topLeftCorner, points.topRightCorner, 0);\r\n  drawFrame(points.topRightCorner, points.bottomRightCorner, 1);\r\n  drawFrame(points.bottomRightCorner, points.bottomLeftCorner, 2);\r\n  drawFrame(points.bottomLeftCorner, points.topLeftCorner, 3);\r\n\r\n  // Min max\r\n  let minX = Math.min(...X);\r\n  let minY = Math.min(...Y);\r\n\r\n  // Style for canvas\r\n  for (const key in canvasStyles) {\r\n    (ctx as any)[key] = (canvasStyles as any)[key];\r\n  }\r\n  ctx.font = canvasStyles && canvasStyles.font ? canvasStyles.font : `15px serif`;\r\n  FILL_TEXT_MULTI_LINE(ctx, code.data, minX, minY - 5);\r\n\r\n  // polygon [x,y, x,y, x,y.....];\r\n  const polygon = [];\r\n  for (let k = 0; k < X.length; k++) {\r\n    polygon.push(loc[`x${k + 1}`]);\r\n    polygon.push(loc[`y${k + 1}`]);\r\n  }\r\n\r\n  // Copy array\r\n  const shape = polygon.slice(0) as any;\r\n\r\n  // Draw polygon\r\n  ctx.beginPath();\r\n  ctx.moveTo(shape.shift(), shape.shift());\r\n  while (shape.length) {\r\n    ctx.lineTo(shape.shift(), shape.shift()); //x,y\r\n  }\r\n  ctx.closePath();\r\n  ctx.fill();\r\n  ctx.stroke();\r\n}\r\n\r\n/**\r\n * READ_AS_DATA_URL\r\n * @param file \r\n * @param config \r\n * @return Promise\r\n */\r\nexport const READ_AS_DATA_URL = (file: File, configs: ScannerQRCodeConfig): Promise<ScannerQRCodeSelectedFiles> => {\r\n  /** overrides **/\r\n  let canvasStyles = (configs && configs.canvasStyles) ? configs.canvasStyles : CONFIG_DEFAULT.canvasStyles;\r\n  let isBeep = (configs && configs.isBeep) ? configs.isBeep : CONFIG_DEFAULT.isBeep;\r\n\r\n  /** drawImage **/\r\n  return new Promise((resolve, reject) => {\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      const objectFile = {\r\n        name: file.name,\r\n        file: file,\r\n        url: URL.createObjectURL(file)\r\n      };\r\n      // Set the src of this Image object.\r\n      const image = new Image();\r\n      // Setting cross origin value to anonymous\r\n      image.setAttribute('crossOrigin', 'anonymous');\r\n      // When our image has loaded.\r\n      image.onload = async () => {\r\n        // Get the canvas element by using the getElementById method.\r\n        const canvas = document.createElement('canvas');\r\n        // HTMLImageElement size\r\n        canvas.width = image.naturalWidth || image.width;\r\n        canvas.height = image.naturalHeight || image.height;\r\n        // Get a 2D drawing context for the canvas.\r\n        const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        // Draw image\r\n        ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n        // Data image\r\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n        // Scanner\r\n        const code = jsQR(imageData.data, imageData.width, imageData.height, {\r\n          inversionAttempts: \"dontInvert\",\r\n        }) as ScannerQRCodeResult;\r\n        if (code && code.data !== '') {\r\n          // Overlay\r\n          DRAW_RESULT_ON_CANVAS(code, canvas, canvasStyles);\r\n\r\n          // Emit object\r\n          const blob = await CANVAS_TO_BLOB(canvas);\r\n          const url = URL.createObjectURL(blob);\r\n          const blobToFile = (theBlob: any, fileName: string) => new File([theBlob], fileName, { lastModified: new Date().getTime(), type: theBlob.type });\r\n          resolve(Object.assign({}, objectFile, { data: code, url: url, canvas: canvas, file: blobToFile(blob, objectFile.name) }));\r\n\r\n          PLAY_AUDIO(isBeep);\r\n        } else {\r\n          resolve(Object.assign({}, objectFile, { data: code, canvas: canvas }));\r\n        }\r\n      };\r\n      // Set src\r\n      image.src = objectFile.url;\r\n    }\r\n    fileReader.onerror = (error: any) => reject(error);\r\n    fileReader.readAsDataURL(file);\r\n  })\r\n}\r\n\r\n/**\r\n * Convert canvas to blob\r\n * canvas.toBlob((blob) => { .. }, 'image/jpeg', 0.95); // JPEG at 95% quality\r\n * @param canvas \r\n * @param type \r\n * @return Promise\r\n */\r\nexport const CANVAS_TO_BLOB = (canvas: HTMLCanvasElement, type?: string): Promise<any> => {\r\n  return new Promise((resolve, reject) => canvas.toBlob(blob => resolve(blob), type));\r\n}\r\n\r\n/**\r\n * Convert blob to file\r\n * @param theBlob \r\n * @param fileName \r\n * @return File\r\n */\r\nexport const BLOB_TO_FILE = (theBlob: any, fileName: string): File => {\r\n  return new File([theBlob], fileName, { lastModified: new Date().getTime(), type: theBlob.type });\r\n}\r\n\r\n/**\r\n * FILES_TO_SCAN\r\n * @param files \r\n * @param configs \r\n * @param as \r\n * @returns \r\n */\r\nexport const FILES_TO_SCAN = (files: File[] = [], configs: ScannerQRCodeConfig, as = new AsyncSubject<ScannerQRCodeSelectedFiles[]>()): AsyncSubject<ScannerQRCodeSelectedFiles[]> => {\r\n  Promise.all(Object.assign([], files).map(m => READ_AS_DATA_URL(m, configs))).then((img: ScannerQRCodeSelectedFiles[]) => {\r\n    AS_COMPLETE(as, img);\r\n  }).catch((error: any) => AS_COMPLETE(as, null, error));\r\n  return as;\r\n}\r\n\r\n/**\r\n * FILL_TEXT_MULTI_LINE\r\n * @param ctx \r\n * @param text \r\n * @param x \r\n * @param y \r\n */\r\nexport const FILL_TEXT_MULTI_LINE = (ctx: CanvasRenderingContext2D, text: string, x: number, y: number) => {\r\n  let lineHeight = ctx.measureText(\"M\").width * 1.2;\r\n  let lines = text.split(\"\\n\");\r\n  for (var i = 0; i < lines.length; ++i) {\r\n    ctx.fillText(lines[i], x, y);\r\n    ctx.strokeText(lines[i], x, y);\r\n    y += lineHeight;\r\n  }\r\n}\r\n\r\n/**\r\n * COMPRESS_IMAGE\r\n * @param files \r\n * @param type \r\n * @param quality \r\n * @returns \r\n */\r\nexport const COMPRESS_IMAGE = async (files: File[], quality: number, type: string) => {\r\n  // No files selected\r\n  if (!files.length) return;\r\n\r\n  const compressImage = async (file: File): Promise<File> => {\r\n    // Get as image data\r\n    const imageBitmap = await createImageBitmap(file);\r\n\r\n    // Draw to canvas\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = imageBitmap.width;\r\n    canvas.height = imageBitmap.height;\r\n    const ctx = canvas.getContext('2d');\r\n    (ctx as any).drawImage(imageBitmap, 0, 0);\r\n\r\n    // Turn into Blob\r\n    const blob = await new Promise((resolve) =>\r\n      canvas.toBlob(resolve, type, quality)\r\n    ) as any;\r\n\r\n    // Turn Blob into File\r\n    return new File([blob], file.name, {\r\n      type: blob.type,\r\n    });\r\n  };\r\n\r\n  // We'll store the files in this data transfer object\r\n  const dataTransfer = new DataTransfer();\r\n\r\n  // For every file in the files list\r\n  for (const file of files) {\r\n    // We don't have to compress files that aren't images\r\n    if (!file.type.startsWith('image')) {\r\n      // Ignore this file, but do add it to our result\r\n      dataTransfer.items.add(file);\r\n      continue;\r\n    }\r\n\r\n    // We compress the file by 50%\r\n    const compressedFile = await compressImage(file);\r\n\r\n    // Save back the compressed file instead of the original file\r\n    dataTransfer.items.add(compressedFile);\r\n  }\r\n\r\n  // return value new files list\r\n  return dataTransfer.files;\r\n}\r\n\r\n/**\r\n * REMOVE_CANVAS\r\n * @param element \r\n */\r\nexport const REMOVE_CANVAS = (element: HTMLElement) => {\r\n  Object.assign([], element.childNodes).forEach(el => element.removeChild(el));\r\n}\r\n\r\n/**\r\n * VIBRATE\r\n * Báº­t rung trÃªn mobile\r\n * @param time \r\n */\r\nexport const VIBRATE = (time: number = 300) => {\r\n  time && IS_MOBILE() && window.navigator.vibrate(time);\r\n};\r\n\r\n/**\r\n * IS_MOBILE\r\n * @returns \r\n */\r\nexport const IS_MOBILE = () => {\r\n  const vendor = navigator.userAgent || navigator['vendor'] || (window as any)['opera'];\r\n  const phone = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i;\r\n  const version = /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i;\r\n  const isSafari = /^((?!chrome|android).)*safari/i;\r\n  return !!(phone.test(vendor) || version.test(vendor.substr(0, 4))) && !isSafari.test(vendor);\r\n};","import { Injectable } from '@angular/core';\r\nimport { AsyncSubject } from 'rxjs';\r\nimport { AS_COMPLETE, COMPRESS_IMAGE, FILES_TO_SCAN } from './ngx-scanner-qrcode-single.helper';\r\nimport { ScannerQRCodeConfig, ScannerQRCodeSelectedFiles } from './ngx-scanner-qrcode-single.options';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgxScannerQrcodeSingleService {\r\n\r\n  /**\r\n   * loadFiles\r\n   * @param files \r\n   * @param quality \r\n   * @param type \r\n   * @returns \r\n   */\r\n  public loadFiles(files: File[] = [], quality = 0.5, type = 'image/jpeg'): AsyncSubject<ScannerQRCodeSelectedFiles[]> {\r\n    const as = new AsyncSubject<ScannerQRCodeSelectedFiles[]>();\r\n    COMPRESS_IMAGE(files, quality, type).then((_files: any) => {\r\n      Promise.all(Object.assign([], _files).map((m: File) => this.readAsDataURL(m))).then((img: any[]) => AS_COMPLETE(as, img)).catch((error: any) => AS_COMPLETE(as, null, error));\r\n    }).catch(error => {\r\n      AS_COMPLETE(as, null, error as any);\r\n    });\r\n    return as;\r\n  }\r\n\r\n  /**\r\n   * loadFilesToScan\r\n   * @param files \r\n   * @param config \r\n   * @param quality \r\n   * @param type \r\n   * @returns \r\n   */\r\n  public loadFilesToScan(files: File[] = [], config: ScannerQRCodeConfig, quality = 0.5, type = 'image/jpeg'): AsyncSubject<ScannerQRCodeSelectedFiles[]> {\r\n    const as = new AsyncSubject<ScannerQRCodeSelectedFiles[]>();\r\n    COMPRESS_IMAGE(files, quality, type).then((_files: any) => {\r\n      FILES_TO_SCAN(_files, config, as);\r\n    }).catch(error => {\r\n      AS_COMPLETE(as, null, error as any);\r\n    });\r\n    return as\r\n  }\r\n\r\n  /**\r\n   * readAsDataURL\r\n   * @param file \r\n   * @return Promise\r\n   */\r\n  private readAsDataURL(file: File): Promise<ScannerQRCodeSelectedFiles> {\r\n    /** drawImage **/\r\n    return new Promise((resolve, reject) => {\r\n      const fileReader = new FileReader();\r\n      fileReader.onload = () => {\r\n        const objectFile = {\r\n          name: file.name,\r\n          file: file,\r\n          url: URL.createObjectURL(file)\r\n        };\r\n        resolve(objectFile);\r\n      }\r\n      fileReader.onerror = (error: any) => reject(error);\r\n      fileReader.readAsDataURL(file);\r\n    })\r\n  }\r\n}","import { Component, ElementRef, EventEmitter, OnDestroy, OnInit, ViewChild, ViewEncapsulation, AfterViewInit } from '@angular/core';\r\nimport jsQR from \"jsqr\";\r\nimport { AsyncSubject, BehaviorSubject } from 'rxjs';\r\nimport { CONFIG_DEFAULT, MEDIA_STREAM_DEFAULT } from './ngx-scanner-qrcode-single.default';\r\nimport { AS_COMPLETE, BLOB_TO_FILE, CANVAS_TO_BLOB, DRAW_RESULT_APPEND_CHILD, FILES_TO_SCAN, OVERRIDES, PLAY_AUDIO, PROP_EXISTS, REMOVE_CANVAS, VIBRATE } from './ngx-scanner-qrcode-single.helper';\r\nimport { ScannerQRCodeConfig, ScannerQRCodeDevice, ScannerQRCodeResult, ScannerQRCodeSelectedFiles } from './ngx-scanner-qrcode-single.options';\r\n\r\n@Component({\r\n  selector: 'ngx-scanner-qrcode-single',\r\n  template: `<div #resultsPanel class=\"origin-overlay\"></div><canvas #canvas class=\"origin-canvas\"></canvas><video #video playsinline class=\"origin-video\"></video>`,\r\n  styleUrls: ['./ngx-scanner-qrcode-single.component.scss'],\r\n  host: { 'class': 'ngx-scanner-qrcode-single' },\r\n  exportAs: 'scanner',\r\n  inputs: ['src', 'fps', 'vibrate', 'isBeep', 'config', 'constraints', 'canvasStyles'],\r\n  outputs: ['event'],\r\n  queries: {\r\n    video: new ViewChild('video'),\r\n    canvas: new ViewChild('canvas'),\r\n    resultsPanel: new ViewChild('resultsPanel')\r\n  },\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NgxScannerQrcodeSingleComponent implements OnInit, OnDestroy, AfterViewInit {\r\n\r\n  /**\r\n   * Element\r\n   * playsinline required to tell iOS safari we don't want fullscreen\r\n   */\r\n  public video!: ElementRef<HTMLVideoElement>;\r\n  public canvas!: ElementRef<HTMLCanvasElement>;\r\n  public resultsPanel!: ElementRef<HTMLDivElement>;\r\n\r\n  /**\r\n   * EventEmitter\r\n   */\r\n  public event = new EventEmitter<ScannerQRCodeResult>();\r\n\r\n  /**\r\n   * Input\r\n   */\r\n  public src: string | undefined = CONFIG_DEFAULT.src;\r\n  public fps: number | undefined = CONFIG_DEFAULT.fps;\r\n  public vibrate: number | undefined = CONFIG_DEFAULT.vibrate;\r\n  public isBeep: boolean | undefined = CONFIG_DEFAULT.isBeep;\r\n  public config: ScannerQRCodeConfig = CONFIG_DEFAULT;\r\n  public constraints: MediaStreamConstraints | any = CONFIG_DEFAULT.constraints;\r\n  public canvasStyles: CanvasRenderingContext2D | any = CONFIG_DEFAULT.canvasStyles;\r\n\r\n  /**\r\n   * Export\r\n  */\r\n  public isStart: boolean = false;\r\n  public isPause: boolean = false;\r\n  public isLoading: boolean = false;\r\n  public isTorch: boolean = false;\r\n  public data = new BehaviorSubject<ScannerQRCodeResult>(null);\r\n  public devices = new BehaviorSubject<ScannerQRCodeDevice[]>([]);\r\n  public deviceIndexActive: number = 0;\r\n\r\n  /**\r\n   * Private\r\n  */\r\n  private rAF_ID: any;\r\n  private dataForResize!: ScannerQRCodeResult;\r\n  private ready = new AsyncSubject<boolean>();\r\n\r\n  private STATUS = {\r\n    startON: () => this.isStart = true,\r\n    pauseON: () => this.isPause = true,\r\n    loadingON: () => this.isLoading = true,\r\n    startOFF: () => this.isStart = false,\r\n    pauseOFF: () => this.isPause = false,\r\n    loadingOFF: () => this.isLoading = false,\r\n    torchOFF: () => this.isTorch = false,\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.overrideConfig();\r\n    if (this.src) {\r\n      this.loadImage(this.src);\r\n    }\r\n    this.resize();\r\n  }\r\n  \r\n  ngAfterViewInit(): void {\r\n    setTimeout(() => AS_COMPLETE(this.ready, true), 1000);\r\n  }\r\n\r\n  /**\r\n   * start\r\n   * @param playDeviceCustom \r\n   * @return AsyncSubject\r\n   */\r\n  public start(playDeviceCustom?: Function): AsyncSubject<any> {\r\n    const as = new AsyncSubject<any>();\r\n    if (this.isStart) {\r\n      // Reject\r\n      AS_COMPLETE(as, false);\r\n    } else {\r\n      // fix safari\r\n      this.safariWebRTC(as, playDeviceCustom);\r\n    }\r\n    return as;\r\n  }\r\n\r\n  /**\r\n   * stop\r\n   * @return AsyncSubject\r\n   */\r\n  public stop(): AsyncSubject<any> {\r\n    this.STATUS.pauseOFF();\r\n    this.STATUS.startOFF();\r\n    this.STATUS.torchOFF();\r\n    this.STATUS.loadingOFF();\r\n    const as = new AsyncSubject<any>();\r\n    try {\r\n      clearInterval(this.rAF_ID);\r\n      (this.video.nativeElement.srcObject as MediaStream).getTracks().forEach((track: MediaStreamTrack) => {\r\n        track.stop();\r\n        AS_COMPLETE(as, true);\r\n      });\r\n      REMOVE_CANVAS(this.resultsPanel.nativeElement);\r\n    } catch (error) {\r\n      AS_COMPLETE(as, false, error as any);\r\n    }\r\n    return as;\r\n  }\r\n\r\n  /**\r\n   * play\r\n   * @return AsyncSubject\r\n   */\r\n  public play(): AsyncSubject<any> {\r\n    const as = new AsyncSubject<any>();\r\n    if (this.isPause) {\r\n      this.video.nativeElement.play();\r\n      this.STATUS.pauseOFF();\r\n      this.requestAnimationFrame(90);\r\n      AS_COMPLETE(as, true);\r\n    } else {\r\n      AS_COMPLETE(as, false);\r\n    }\r\n    return as;\r\n  }\r\n\r\n  /**\r\n   * pause\r\n   * @return AsyncSubject \r\n   */\r\n  public pause(): AsyncSubject<any> {\r\n    const as = new AsyncSubject<any>();\r\n    if (this.isStart) {\r\n      clearInterval(this.rAF_ID);\r\n      this.video.nativeElement.pause();\r\n      this.STATUS.pauseON();\r\n      AS_COMPLETE(as, true);\r\n    } else {\r\n      AS_COMPLETE(as, false);\r\n    }\r\n    return as;\r\n  }\r\n\r\n  /**\r\n   * playDevice\r\n   * @param deviceId \r\n   * @param as \r\n   * @return AsyncSubject \r\n   */\r\n  public playDevice(deviceId: string, as: AsyncSubject<any> = new AsyncSubject<any>()): AsyncSubject<any> {\r\n    const existDeviceId = this.isStart ? this.getConstraints().deviceId !== deviceId : true;\r\n    switch (true) {\r\n      case deviceId === 'null' || deviceId === 'undefined' || !deviceId:\r\n        stop();\r\n        this.stop();\r\n        AS_COMPLETE(as, false);\r\n        break;\r\n      case deviceId && existDeviceId:\r\n        stop();\r\n        this.stop();\r\n        // Loading on\r\n        this.STATUS.loadingON();\r\n        this.deviceIndexActive = this.devices.value.findIndex((f: ScannerQRCodeDevice) => f.deviceId === deviceId);\r\n        const constraints = { ...this.constraints, audio: false, video: { deviceId: deviceId, ...this.constraints.video } };\r\n        // MediaStream\r\n        navigator.mediaDevices.getUserMedia(constraints).then((stream: MediaStream) => {\r\n          this.video.nativeElement.srcObject = stream;\r\n          this.video.nativeElement.onloadedmetadata = () => {\r\n            this.video.nativeElement.play();\r\n            this.requestAnimationFrame();\r\n            AS_COMPLETE(as, true);\r\n            this.STATUS.startON();\r\n            this.STATUS.loadingOFF();\r\n          }\r\n        }).catch((error: any) => {\r\n          this.eventEmit(false);\r\n          AS_COMPLETE(as, false, error);\r\n          this.STATUS.startOFF();\r\n          this.STATUS.loadingOFF();\r\n        });\r\n        break;\r\n      default:\r\n        AS_COMPLETE(as, false);\r\n        this.STATUS.loadingOFF();\r\n        break;\r\n    }\r\n    return as;\r\n  }\r\n\r\n  /**\r\n   * loadImage\r\n   * @param src \r\n   * @return AsyncSubject\r\n   */\r\n  public loadImage(src: string): AsyncSubject<any> {\r\n    const as = new AsyncSubject<any>();\r\n    // Loading on\r\n    this.STATUS.startOFF();\r\n    this.STATUS.loadingON();\r\n    // Set the src of this Image object.\r\n    const image = new Image();\r\n    // Setting cross origin value to anonymous\r\n    image.setAttribute('crossOrigin', 'anonymous');\r\n    // When our image has loaded.\r\n    image.onload = () => {\r\n      this.drawImage(image, (flag: boolean) => {\r\n        AS_COMPLETE(as, flag);\r\n        this.STATUS.startOFF();\r\n        this.STATUS.loadingOFF();\r\n      });\r\n    };\r\n    // Set src\r\n    image.src = src;\r\n    return as;\r\n  }\r\n\r\n  /**\r\n   * torcher\r\n   * @return AsyncSubject\r\n   */\r\n  public torcher(): AsyncSubject<any> {\r\n    const as = this.applyConstraints({ advanced: [{ torch: this.isTorch }] });\r\n    as.subscribe(() => false, () => this.isTorch = !this.isTorch);\r\n    return as;\r\n  }\r\n\r\n  /**\r\n   * applyConstraints\r\n   * @param constraints \r\n   * @return AsyncSubject\r\n   */\r\n  public applyConstraints(constraints: MediaTrackConstraintSet | MediaTrackConstraints | any): AsyncSubject<any> {\r\n    const as = new AsyncSubject<any>();\r\n    const stream = this.video.nativeElement.srcObject as MediaStream;\r\n    const videoTrack = stream.getVideoTracks()[0] as MediaStreamTrack;\r\n    const imageCapture = new (window as any).ImageCapture(videoTrack);\r\n    imageCapture.getPhotoCapabilities().then(async () => {\r\n      await videoTrack.applyConstraints(constraints);\r\n      AS_COMPLETE(as, true);\r\n    }).catch((error: any) => {\r\n      switch (error && error.name) {\r\n        case 'NotFoundError':\r\n        case 'DevicesNotFoundError':\r\n          AS_COMPLETE(as, false, 'Required track is missing' as any);\r\n          break;\r\n        case 'NotReadableError':\r\n        case 'TrackStartError':\r\n          AS_COMPLETE(as, false, 'Webcam or mic are already in use' as any);\r\n          break;\r\n        case 'OverconstrainedError':\r\n        case 'ConstraintNotSatisfiedError':\r\n          AS_COMPLETE(as, false, 'Constraints can not be satisfied by avb. devices' as any);\r\n          break;\r\n        case 'NotAllowedError':\r\n        case 'PermissionDeniedError':\r\n          AS_COMPLETE(as, false, 'Permission denied in browser' as any);\r\n          break;\r\n        case 'TypeError':\r\n          AS_COMPLETE(as, false, 'Empty constraints object' as any);\r\n          break;\r\n        default:\r\n          AS_COMPLETE(as, false, error as any);\r\n          break;\r\n      }\r\n    });\r\n    return as;\r\n  };\r\n\r\n  /**\r\n   * getConstraints\r\n   * @returns \r\n   */\r\n  public getConstraints(): MediaTrackConstraintSet | any {\r\n    const stream = this.video.nativeElement.srcObject as MediaStream;\r\n    const videoTrack = stream && stream.getVideoTracks()[0] as MediaStreamTrack;\r\n    return videoTrack && videoTrack.getConstraints() as any;\r\n  }\r\n\r\n  /**\r\n   * download\r\n   * @param fileName \r\n   * @return AsyncSubject\r\n   */\r\n  public download(fileName: string = `ngx-scanner-qrcode-single-${Date.now()}.png`): AsyncSubject<ScannerQRCodeSelectedFiles[]> {\r\n    const as = new AsyncSubject<any>();\r\n    const run = async () => {\r\n      const blob = await CANVAS_TO_BLOB(this.canvas.nativeElement);\r\n      const file = BLOB_TO_FILE(blob, fileName);\r\n      FILES_TO_SCAN([file], this.config, as).subscribe((res: ScannerQRCodeSelectedFiles[]) => {\r\n        res.forEach((item: ScannerQRCodeSelectedFiles) => {\r\n          const link = document.createElement('a');\r\n          link.href = item.url;\r\n          link.download = item.name;\r\n          link.click();\r\n          link.remove()\r\n        });\r\n      });\r\n    }\r\n    run();\r\n    return as;\r\n  }\r\n\r\n  /**\r\n   * window: resize\r\n   * Draw again!\r\n   */\r\n  private resize(): void {\r\n    window.addEventListener(\"resize\", () => {\r\n      if (this.dataForResize) {\r\n        DRAW_RESULT_APPEND_CHILD(this.dataForResize as any, this.canvas.nativeElement, this.resultsPanel.nativeElement, this.canvasStyles);\r\n        this.video.nativeElement.style.height = this.canvas.nativeElement.offsetHeight + 'px';\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Override config\r\n   * @return void\r\n   */\r\n  private overrideConfig(): void {\r\n    if (PROP_EXISTS(this.config, 'src')) this.src = this.config.src;\r\n    if (PROP_EXISTS(this.config, 'fps')) this.fps = this.config.fps;\r\n    if (PROP_EXISTS(this.config, 'vibrate')) this.vibrate = this.config.vibrate;\r\n    if (PROP_EXISTS(this.config, 'isBeep')) this.isBeep = this.config.isBeep;\r\n    if (PROP_EXISTS(this.config, 'constraints')) this.constraints = OVERRIDES('constraints', this.config, MEDIA_STREAM_DEFAULT);\r\n    if (PROP_EXISTS(this.config, 'canvasStyles')) this.canvasStyles = this.config.canvasStyles;\r\n  }\r\n\r\n  /**\r\n   * safariWebRTC\r\n   * Fix issue on safari\r\n   * https://webrtchacks.com/guide-to-safari-webrtc\r\n   * @param as \r\n   * @param playDeviceCustom \r\n   */\r\n  private safariWebRTC(as: AsyncSubject<any>, playDeviceCustom?: Function): void {\r\n    // Loading on\r\n    this.STATUS.startOFF();\r\n    this.STATUS.loadingON();\r\n    navigator.mediaDevices.getUserMedia(this.constraints).then((stream: MediaStream) => {\r\n      stream.getTracks().forEach(track => track.stop());\r\n      this.loadAllDevices(as, playDeviceCustom);\r\n    }).catch((error: any) => {\r\n      AS_COMPLETE(as, false, error);\r\n      this.STATUS.startOFF();\r\n      this.STATUS.loadingOFF();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * loadAllDevices\r\n   * @param as \r\n   * @param playDeviceCustom \r\n   */\r\n  private loadAllDevices(as: AsyncSubject<any>, playDeviceCustom?: Function): void {\r\n    navigator.mediaDevices.enumerateDevices().then(devices => {\r\n      let cameraDevices: ScannerQRCodeDevice[] = devices.filter(f => f.kind == 'videoinput');\r\n      this.devices.next(cameraDevices);\r\n      if (cameraDevices.length > 0) {\r\n        AS_COMPLETE(as, cameraDevices);\r\n        playDeviceCustom ? playDeviceCustom(cameraDevices) : this.playDevice(cameraDevices[0].deviceId);\r\n      } else {\r\n        AS_COMPLETE(as, false, 'No camera detected.' as any);\r\n        this.STATUS.startOFF();\r\n        this.STATUS.loadingOFF();\r\n      }\r\n    }).catch((error: any) => {\r\n      AS_COMPLETE(as, false, error);\r\n      this.STATUS.startOFF();\r\n      this.STATUS.loadingOFF();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * drawImage\r\n   * @param element \r\n   * @param callback \r\n   */\r\n  private async drawImage(element: HTMLImageElement | HTMLVideoElement, callback: Function = () => { }): Promise<void> {\r\n    // Get the canvas element by using the getElementById method.\r\n    const canvas = this.canvas.nativeElement;\r\n    // Get a 2D drawing context for the canvas.\r\n    const ctx = canvas.getContext('2d', { willReadFrequently: true }) as CanvasRenderingContext2D;\r\n    // HTMLImageElement size\r\n    if (element instanceof HTMLImageElement) {\r\n      canvas.width = element.naturalWidth;\r\n      canvas.height = element.naturalHeight;\r\n      element.style.visibility = '';\r\n      this.video.nativeElement.style.visibility = 'hidden';\r\n      this.video.nativeElement.style.height = canvas.offsetHeight + 'px';\r\n    }\r\n    // HTMLVideoElement size\r\n    if (element instanceof HTMLVideoElement) {\r\n      canvas.width = element.videoWidth;\r\n      canvas.height = element.videoHeight;\r\n      element.style.visibility = '';\r\n      this.canvas.nativeElement.style.visibility = 'hidden';\r\n    }\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n    // Draw image\r\n    ctx.drawImage(element, 0, 0, canvas.width, canvas.height);\r\n    // Data image\r\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n    // Draw frame\r\n    const code = jsQR(imageData.data, imageData.width, imageData.height, {\r\n      inversionAttempts: \"dontInvert\",\r\n    }) as ScannerQRCodeResult;\r\n    if (code && code.data !== '') {\r\n      // Overlay\r\n      DRAW_RESULT_APPEND_CHILD(code, this.canvas.nativeElement, this.resultsPanel.nativeElement, this.canvasStyles);\r\n\r\n      // To blob and emit data\r\n      const EMIT_DATA = () => {\r\n        this.eventEmit(code);\r\n        this.dataForResize = code;\r\n      };\r\n\r\n      // HTMLImageElement\r\n      if (element instanceof HTMLImageElement) {\r\n        callback(true);\r\n        EMIT_DATA();\r\n        VIBRATE(this.vibrate);\r\n        PLAY_AUDIO(this.isBeep);\r\n      }\r\n      // HTMLVideoElement\r\n      if (element instanceof HTMLVideoElement) {\r\n        EMIT_DATA();\r\n        VIBRATE(this.vibrate);\r\n        PLAY_AUDIO(this.isBeep);\r\n      }\r\n    } else {\r\n      callback(false);\r\n      REMOVE_CANVAS(this.resultsPanel.nativeElement);\r\n      this.dataForResize = code;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * eventEmit\r\n   * @param response \r\n   */\r\n  private eventEmit(response: any = false): void {\r\n    (response !== false) && this.data.next(response || { data: null });\r\n    (response !== false) && this.event.emit(response || { data: null });\r\n  }\r\n\r\n  /**\r\n   * Single-thread\r\n   * Loop Recording on Camera\r\n   * Must be destroy request \r\n   * Not using: requestAnimationFrame\r\n   * @param delay\r\n   */\r\n  private requestAnimationFrame(delay: number = 0): void {\r\n    this.rAF_ID = setInterval(() => {\r\n      if (this.video.nativeElement.readyState === this.video.nativeElement.HAVE_ENOUGH_DATA) {\r\n        delay = 0;\r\n        this.drawImage(this.video.nativeElement);\r\n      }\r\n    }, /*avoid cache mediaStream*/ delay || this.fps);\r\n  }\r\n\r\n  /**\r\n   * Status of wasm\r\n   * @return AsyncSubject\r\n   */\r\n  get isReady(): AsyncSubject<boolean> {\r\n    return this.ready;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.pause();\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { NgxScannerQrcodeSingleService } from \"./ngx-scanner-qrcode-single.service\";\r\nimport { NgxScannerQrcodeSingleComponent } from \"./ngx-scanner-qrcode-single.component\";\r\n\r\n\r\n@NgModule({\r\n  declarations: [NgxScannerQrcodeSingleComponent],\r\n  exports: [NgxScannerQrcodeSingleComponent],\r\n  providers: [NgxScannerQrcodeSingleService],\r\n})\r\nexport class NgxScannerQrcodeSingleModule {}\r\n"]}